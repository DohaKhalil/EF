// <auto-generated />
using System;
using EntityFrameworkAssignment.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkAssignment.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240227124003_IniCreate")]
    partial class IniCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AirLineId")
                        .HasColumnType("int");

                    b.Property<string>("Assistant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capsity")
                        .HasColumnType("int");

                    b.Property<string>("Host_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maj_Pailot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirLineId");

                    b.ToTable("AirCraft");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirCraft_Route", b =>
                {
                    b.Property<int?>("ACRId")
                        .HasColumnType("int");

                    b.Property<int>("RoutId")
                        .HasColumnType("int");

                    b.Property<int?>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Num_Of_Pass")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("ACRId", "RoutId");

                    b.HasIndex("AirCraftId");

                    b.HasIndex("RouteId");

                    b.ToTable("AirCraft_Routes");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirCraftsId")
                        .HasColumnType("int");

                    b.Property<int>("Count_Person")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AirLines");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirLine_Phone", b =>
                {
                    b.Property<double>("phone")
                        .HasColumnType("float");

                    b.Property<int>("AirLineId")
                        .HasColumnType("int");

                    b.HasKey("phone", "AirLineId");

                    b.HasIndex("AirLineId");

                    b.ToTable("AirLine_Phones");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Emp_Cualification", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<string>("Qulification")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeesId", "Qulification");

                    b.ToTable("Emp_Cualifications");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AirLineId")
                        .HasColumnType("int");

                    b.Property<string>("BD_Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BD_Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BD_Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirLineId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Classfication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distanction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distnace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AirLineId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirLineId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirCraft", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.AirLine", "AirLine")
                        .WithMany("AirCrafts")
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLine");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirCraft_Route", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.AirCraft", null)
                        .WithMany("AirCraftRoutes")
                        .HasForeignKey("AirCraftId");

                    b.HasOne("EntityFrameworkAssignment.Model.Route", null)
                        .WithMany("AirCraftRoutes")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirLine_Phone", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.AirLine", "AirLinesPh")
                        .WithMany("AirLine_Phones")
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLinesPh");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Emp_Cualification", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.Employee", "Employees")
                        .WithMany("Emp_Cualification")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Employee", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.AirLine", "AirLine")
                        .WithMany("Employees")
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AirLine");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Transaction", b =>
                {
                    b.HasOne("EntityFrameworkAssignment.Model.AirLine", "AirLines")
                        .WithMany("Transaction")
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLines");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirCraft", b =>
                {
                    b.Navigation("AirCraftRoutes");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.AirLine", b =>
                {
                    b.Navigation("AirCrafts");

                    b.Navigation("AirLine_Phones");

                    b.Navigation("Employees");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Employee", b =>
                {
                    b.Navigation("Emp_Cualification");
                });

            modelBuilder.Entity("EntityFrameworkAssignment.Model.Route", b =>
                {
                    b.Navigation("AirCraftRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
